<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- spring组件扫描器，根据 base-package得配置 自动扫描com.nute,com.nutech下的所有注解并实例化bean -->
    <context:annotation-config/>
    <context:component-scan base-package="com.toomuchwork.*"/>
    <aop:aspectj-autoproxy/>
    <bean id="propertyConfigure"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:db.properties</value>
            </list>
        </property>
    </bean>
    <!--配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${driverName}"/>
        <property name="url" value="${url}"/>
        <property name="username" value="${username}"/>
        <property name="password" value="${password}"/>
        <!--下面的配置内容以项目组配置为准 -->
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1"/>
        <property name="minIdle" value="1"/>
        <property name="maxActive" value="10"/>

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000"/>

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000"/>

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000"/>

        <property name="testWhileIdle" value="true"/>

        <!-- 这里建议配置为TRUE，防止取到的连接不可用 -->
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true"/>
        <property name="maxPoolPreparedStatementPerConnectionSize"
                  value="20"/>

        <!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->

        <property name="defaultAutoCommit" value="true"/>

        <!-- 验证连接有效与否的SQL，不同的数据配置不同 -->
        <property name="validationQuery" value="select 1 "/>
        <property name="filters" value="stat"/>
        <property name="proxyFilters">
            <list>
                <ref bean="logFilter"/>
            </list>
        </property>
    </bean>
    <bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
        <property name="statementExecutableSqlLogEnable" value="false"/>
    </bean>

    <!-- 通过Spring加载mybatis -->
    <bean id="sqlSessionFactory"
          class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation"
                  value="classpath:mybatis-config.xml"/>
        <!--<property name="typeAliases" value="com.nuetech.entity"/>
        <property name="mapperLocations" value="mapper"/>-->
    </bean>

    <bean id="testBean" class="com.toomuchwork.entity.TestBean">
        <property name="sname" value="张三"/>
        <property name="sal" value="50"/>
    </bean>
    <!-- 声明式事务配置 -->
    <!-- 配置事务管理器 -->
    <!-- <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean> -->
    <!-- 配置事务通知 -->
    <!-- <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            配置哪些方法使用何种事务，配置事务的传播特性
            <tx:method name="add" />
            <tx:method name="insert*" />
            <tx:method name="delete"  />
            <tx:method name="update" />
            <tx:method name="save*" />
            <tx:method name="myMethod" read-only="true" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut expression="execution(* com.nutech.service.Impl.*.*(..))"
            id="pointcut" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
    </aop:config> -->
    <!--<tx:annotation-driven/>-->
    <!--在此之前要保证mybatis的包和mybatis给spring提供的插件包都要导入到项目中 -->
<!--    <bean id="sessionFactory"-->
<!--          class="org.mybatis.spring.SqlSessionFactoryBean">-->
<!--        &lt;!&ndash;配置数据层查询文件(XxxMapper.xml文件)的地址 &ndash;&gt;-->
<!--        <property name="mapperLocations"-->
<!--                  value="classpath:mapper/*.xml" />-->
<!--        &lt;!&ndash;将Spring创建的c3p0连接池对象 注入给工厂对象 &ndash;&gt;-->
<!--        <property name="dataSource" ref="dataSource" />-->
        <!-- 分页插件 -->
<!--        <property name="plugins">-->
<!--            <array>-->
<!--                <bean class="com.github.pagehelper.PageHelper">-->
<!--                    <property name="properties">-->
<!--                        <value>-->
<!--                            dialect=mysql-->
<!--                        </value>-->
<!--                    </property>-->
<!--                </bean>-->
<!--            </array>-->
<!--        </property>-->
<!--    </bean>-->
</beans>